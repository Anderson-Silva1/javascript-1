USAREMOS O FETCH:
    - fetch() é uma função nativa do JavaScript que permite fazer requisições HTTP (como GET, POST, etc.) de forma assíncrona.
    - Ele é frequentemente usado para buscar dados de APIs ou servidores e manipulá-los no código.

    SINTAXE:
        fetch('https://api.exemplo.com/dados')  // URL da API ou recurso que você quer acessar
            .then(response => {
                if (!response.ok) {
                throw new Error('Erro na requisição');
                }
                return response.json();  // converte a resposta em JSON
            })
            .then(data => {
                console.log(data);  // faz algo com os dados recebidos
            })
            .catch(error => {
                console.error('Erro:', error);  // trata erros
        });

    * fetch(): Faz a requisição HTTP e retorna uma promessa (Promise) que é resolvida quando a resposta do servidor é recebida.
    * response.ok: Verifica se a resposta foi bem-sucedida (código de status 200-299).
    * response.json(): Converte a resposta para JSON. Há também outros métodos como response.text() para converter a resposta em texto.
    * .then(): Lida com o resultado da promessa.
    * .catch(): Lida com erros que podem ocorrer na requisição.


    API DA NASA:
        - https://api.nasa.gov/neo/rest/v1/feed?start_date=START_DATE&end_date=END_DATE&api_key=API_KEY

        