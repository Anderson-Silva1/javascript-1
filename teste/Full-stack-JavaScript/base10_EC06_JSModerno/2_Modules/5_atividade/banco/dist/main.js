(()=>{"use strict";class s{constructor(s,o){this.agencia=s,this.numero_conta=o,this.todas_transferencias=[],this.saldo=0,this.transacoes=[],this.transacoes_gerais=[]}}class o extends s{constructor(s,o,a,e,t){super(s,o),this.nome=a,this.cpf=e,this.sexo=t}ver_saldo(){console.log(`O saldo de ${this.nome} é de R$${this.saldo}`)}deposito(s,o){let a=this.saldo;this.saldo+=s,this.transacoes.push(`(${this.nome}) DEPOSITO - R$${s} => SALDO ANTES R$${a} / SALDO DEPOIS - R$${this.saldo}`),o.transacoes_gerais.push(`(${this.nome}) DEPOSITO - R$${s} => SALDO ANTES R$${a} / SALDO DEPOIS - R$${this.saldo}`)}saque(s,o){if(this.saldo<s)console.log(`ERROR (${this.nome}) - Saldo insuficiente: R$${this.saldo}`),this.transacoes.push(`ERROR (${this.nome}) - Saldo insuficiente => Valor Saque: R$${s} / Saldo: R$${this.saldo}`),o.transacoes_gerais.push(`ERROR (${this.nome}) - Saldo insuficiente => Valor Saque: R$${s} / Saldo: R$${this.saldo}`);else if(this.saldo>=s){let a=this.saldo;this.saldo-=s,this.transacoes.push(`(${this.nome}) SAQUE - R$${s} / SALDO ANTES: R$${a} / SALDO DEPOIS: R$${this.saldo}`),o.transacoes_gerais.push(`(${this.nome}) SAQUE - R$${s} / SALDO ANTES: R$${a} / SALDO DEPOIS: R$${this.saldo}`)}}traslacao(s,o,a){if(this.saldo<s)console.log(`ERROR TRANSLAÇÃO (${this.nome}) - R$${s} / DE: ${this.nome} / PARA: ${o.nome} / Saldo insuficiente: R$${this.saldo}`),this.transacoes.push(`ERROR TRANSLAÇÃO - R$${s} / DE: ${this.nome} / PARA: ${o.nome} / Saldo insuficiente: R$${this.saldo}`),a.transacoes.push(`ERROR TRANSLAÇÃO - R$${s} / DE: ${this.nome} / PARA: ${o.nome} / Saldo insuficiente: R$${this.saldo}`);else if(this.saldo>=s){let e=this.saldo,t=o.saldo;this.saldo-=s,o.saldo+=s,this.transacoes.push(`TRANSAÇÃO EFETUADA - R$${s} => DE: ${this.nome} (saldo antes: R$${e} / saldo depois: R$${this.saldo}) / PARA: ${o.nome}`),o.transacoes.push(`TRANSAÇÃO RECEBIDA - R$${s} => DE: ${this.nome} / PARA: ${o.nome} (saldo antes: R$${t} / saldo depois: R$${o.saldo})`),a.transacoes_gerais.push(`TRANSAÇÃO RECEBIDA - R$${s} => DE: ${this.nome} (saldo antes: R$${e} / saldo depois: R$${this.saldo}) / PARA: ${o.nome} (saldo antes: R$${t} / saldo depois: R$${o.saldo})`)}}estrato(){console.log(`Titular: ${this.nome}\nAgência: ${this.agencia}\nNúmero da conta: ${this.numero_conta}\nCPF: ${this.cpf}\nSexo: ${this.sexo}\nSaldo: ${this.saldo}`)}}const a=new o(3e3,1,"Anderson","12345678910","homen"),e=new o(3e3,2,"Rafaela","12345612345","mulher"),t=new o(3e3,3,"Emanoel","22342342345","homen"),i=new o(3e3,4,"João","34534534567","homen"),$=new o(3e3,5,"Luísa","12321354345","mulher"),n=new o(void 0,void 0,void 0,void 0,void 0);a.deposito(1e3,n),a.saque(1500,n),e.deposito(3500,n),e.saque(1500,n),t.deposito(2e3,n),i.deposito(3700,n),e.saque(3500,n),$.deposito(6e3,n),a.traslacao(500,t,n),a.traslacao(500,t,n),t.traslacao(2e3,e,n),e.traslacao(5e3,i,n),i.traslacao(8e3,$,n),$.traslacao(11e3,a,n),a.ver_saldo(),e.ver_saldo(),t.ver_saldo(),i.ver_saldo(),$.ver_saldo(),console.log(n.transacoes_gerais)})();